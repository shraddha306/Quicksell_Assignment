{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhuva\\\\Desktop\\\\kanban-board\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\n\n// Import SVG files as React components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = [{\n  id: 1,\n  title: 'Implement feature A',\n  status: 'To Do',\n  assignedUser: 'Alice',\n  priority: 3\n}, {\n  id: 2,\n  title: 'Fix bug B',\n  status: 'In Progress',\n  assignedUser: 'Bob',\n  priority: 1\n}, {\n  id: 3,\n  title: 'Review code C',\n  status: 'Backlog',\n  assignedUser: 'Charlie',\n  priority: 2\n}, {\n  id: 4,\n  title: 'Write documentation',\n  status: 'To Do',\n  assignedUser: 'Alice',\n  priority: 4\n}, {\n  id: 5,\n  title: 'Update UI',\n  status: 'In Progress',\n  assignedUser: 'David',\n  priority: 0\n}];\nconst App = () => {\n  _s();\n  const [tasks] = useState(initialTasks);\n  const [groupBy, setGroupBy] = useState('Status');\n  const [ordering, setOrdering] = useState('Priority');\n  const [displayOptions, setDisplayOptions] = useState(false);\n\n  // Function to return the corresponding SVG component for a category\n  const getCategoryIcon = key => {\n    switch (key) {\n      case 'To Do':\n        return /*#__PURE__*/_jsxDEV(ToDoIcon, {\n          className: \"category-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this);\n      case 'In Progress':\n        return /*#__PURE__*/_jsxDEV(InProgressIcon, {\n          className: \"category-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this);\n      case 'Backlog':\n        return /*#__PURE__*/_jsxDEV(BacklogIcon, {\n          className: \"category-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n      // or you can return a default icon if needed\n    }\n  };\n  const getGroupedTasks = () => {\n    const grouped = {};\n    tasks.forEach(task => {\n      const groupKey = groupBy === 'User' ? task.assignedUser : task[groupBy.toLowerCase()];\n      if (!grouped[groupKey]) {\n        grouped[groupKey] = [];\n      }\n      grouped[groupKey].push(task);\n    });\n    return Object.entries(grouped).map(([key, value]) => ({\n      key,\n      tasks: value.sort((a, b) => {\n        if (ordering === 'Priority') {\n          return b.priority - a.priority;\n        } else {\n          return a.title.localeCompare(b.title);\n        }\n      })\n    }));\n  };\n  const groupedTasks = getGroupedTasks();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-options\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDisplayOptions(!displayOptions),\n          children: \"Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), displayOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"groupBy\",\n              children: \"Group By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"groupBy\",\n              value: groupBy,\n              onChange: e => setGroupBy(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Status\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"User\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Priority\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ordering\",\n              children: \"Ordering:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"ordering\",\n              value: ordering,\n              onChange: e => setOrdering(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Priority\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Title\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-columns\",\n        children: groupedTasks.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ticket-column category-${group.key.replace(/\\s+/g, '-').toLowerCase()}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-header\",\n            children: [getCategoryIcon(group.key), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-name\",\n              children: group.key || 'Unassigned'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ticket-list\",\n            children: group.tasks.length > 0 ? group.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ticket-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 23\n              }, this), task.title, \" (Priority: \", task.priority, \")\"]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty\",\n              children: \"No tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, group.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sU7wlwe2jukq5SI4g0IQhs7KdIs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialTasks","id","title","status","assignedUser","priority","App","_s","tasks","groupBy","setGroupBy","ordering","setOrdering","displayOptions","setDisplayOptions","getCategoryIcon","key","ToDoIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","InProgressIcon","BacklogIcon","getGroupedTasks","grouped","forEach","task","groupKey","toLowerCase","push","Object","entries","map","value","sort","a","b","localeCompare","groupedTasks","children","onClick","htmlFor","onChange","e","target","group","replace","length","type","_c","$RefreshReg$"],"sources":["C:/Users/bhuva/Desktop/kanban-board/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\n// Import SVG files as React components\r\n\r\n\r\n\r\nconst initialTasks = [\r\n  { id: 1, title: 'Implement feature A', status: 'To Do', assignedUser: 'Alice', priority: 3 },\r\n  { id: 2, title: 'Fix bug B', status: 'In Progress', assignedUser: 'Bob', priority: 1 },\r\n  { id: 3, title: 'Review code C', status: 'Backlog', assignedUser: 'Charlie', priority: 2 },\r\n  { id: 4, title: 'Write documentation', status: 'To Do', assignedUser: 'Alice', priority: 4 },\r\n  { id: 5, title: 'Update UI', status: 'In Progress', assignedUser: 'David', priority: 0 },\r\n];\r\n\r\nconst App = () => {\r\n  const [tasks] = useState(initialTasks);\r\n  const [groupBy, setGroupBy] = useState('Status');\r\n  const [ordering, setOrdering] = useState('Priority');\r\n  const [displayOptions, setDisplayOptions] = useState(false);\r\n\r\n  // Function to return the corresponding SVG component for a category\r\n  const getCategoryIcon = (key) => {\r\n    switch (key) {\r\n      case 'To Do':\r\n        return <ToDoIcon className=\"category-icon\" />;\r\n      case 'In Progress':\r\n        return <InProgressIcon className=\"category-icon\" />;\r\n      case 'Backlog':\r\n        return <BacklogIcon className=\"category-icon\" />;\r\n      default:\r\n        return null; // or you can return a default icon if needed\r\n    }\r\n  };\r\n\r\n  const getGroupedTasks = () => {\r\n    const grouped = {};\r\n    tasks.forEach(task => {\r\n      const groupKey = groupBy === 'User' ? task.assignedUser : task[groupBy.toLowerCase()];\r\n      if (!grouped[groupKey]) {\r\n        grouped[groupKey] = [];\r\n      }\r\n      grouped[groupKey].push(task);\r\n    });\r\n\r\n    return Object.entries(grouped).map(([key, value]) => ({\r\n      key,\r\n      tasks: value.sort((a, b) => {\r\n        if (ordering === 'Priority') {\r\n          return b.priority - a.priority;\r\n        } else {\r\n          return a.title.localeCompare(b.title);\r\n        }\r\n      }),\r\n    }));\r\n  };\r\n\r\n  const groupedTasks = getGroupedTasks();\r\n\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      <div className=\"display-options\">\r\n        <div className=\"dropdown\">\r\n          <button onClick={() => setDisplayOptions(!displayOptions)}>Display</button>\r\n          {displayOptions && (\r\n            <div className=\"dropdown-content\">\r\n              <div>\r\n                <label htmlFor=\"groupBy\">Group By:</label>\r\n                <select id=\"groupBy\" value={groupBy} onChange={e => setGroupBy(e.target.value)}>\r\n                  <option value=\"Status\">Status</option>\r\n                  <option value=\"User\">User</option>\r\n                  <option value=\"Priority\">Priority</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"ordering\">Ordering:</label>\r\n                <select id=\"ordering\" value={ordering} onChange={e => setOrdering(e.target.value)}>\r\n                  <option value=\"Priority\">Priority</option>\r\n                  <option value=\"Title\">Title</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"ticket-info\">\r\n        <div className=\"ticket-columns\">\r\n          {groupedTasks.map(group => (\r\n            <div key={group.key} className={`ticket-column category-${group.key.replace(/\\s+/g, '-').toLowerCase()}`}>\r\n              <div className=\"category-header\">\r\n                {getCategoryIcon(group.key)}\r\n                <div className=\"category-name\">{group.key || 'Unassigned'}</div>\r\n              </div>\r\n              <div className=\"ticket-list\">\r\n                {group.tasks.length > 0 ? (\r\n                  group.tasks.map(task => (\r\n                    <div key={task.id} className=\"ticket-card\">\r\n                      <input type=\"checkbox\" className=\"checkbox\" />\r\n                      {task.title} (Priority: {task.priority})\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"empty\">No tasks</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}