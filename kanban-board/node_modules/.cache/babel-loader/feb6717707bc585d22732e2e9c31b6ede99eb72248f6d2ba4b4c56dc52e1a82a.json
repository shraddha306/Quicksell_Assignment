{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhuva\\\\Desktop\\\\kanban-board\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\n\n// Importing category images\nimport todoImage from './icons_FEtask/To-do.svg'; // Update the path as necessary\nimport inProgressImage from './icons_FEtask/in-progress.svg'; // Update the path as necessary\nimport doneImage from './icons_FEtask/Done.svg'; // Update the path as necessary\nimport backlogImage from './icons_FEtask/Backlog.svg'; // Update the path as necessary\nimport highPriorityImage from './icons_FEtask/Img-high.svg'; // Update with actual path\nimport mediumPriorityImage from './icons_FEtask/Img-medium.svg'; // Update with actual path\nimport lowPriorityImage from './icons_FEtask/Img-low.svg'; // Update with actual path\nimport urgentColorImage from './icons_FEtask/Urgent-Color.svg'; // Add your urgent color icon path\nimport noPriorityImage from './icons_FEtask/No-Priority.svg'; // Add your no priority icon path\nimport displayImage from './icons_FEtask/Display.svg'; // Add your display dropdown icon path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categoryImages = {\n  'To Do': todoImage,\n  'In Progress': inProgressImage,\n  'Done': doneImage,\n  'Backlog': backlogImage,\n  'High Priority': highPriorityImage,\n  'Medium Priority': mediumPriorityImage,\n  'Low Priority': lowPriorityImage,\n  'Urgent - Color': urgentColorImage,\n  'No Priority': noPriorityImage\n};\nconst initialTasks = [{\n  id: 1,\n  title: 'Implement feature A',\n  status: 'To Do',\n  assignedUser: 'Alice',\n  priority: 3\n}, {\n  id: 2,\n  title: 'Fix bug B',\n  status: 'In Progress',\n  assignedUser: 'Bob',\n  priority: 1\n}, {\n  id: 3,\n  title: 'Review code C',\n  status: 'Backlog',\n  assignedUser: 'Charlie',\n  priority: 2\n}, {\n  id: 4,\n  title: 'Write documentation',\n  status: 'To Do',\n  assignedUser: 'Alice',\n  priority: 4\n}, {\n  id: 5,\n  title: 'Update UI',\n  status: 'In Progress',\n  assignedUser: 'David',\n  priority: 0\n}];\nconst App = () => {\n  _s();\n  const [tasks] = useState(initialTasks);\n  const [groupBy, setGroupBy] = useState('Status');\n  const [ordering, setOrdering] = useState('Priority');\n  const [displayOptions, setDisplayOptions] = useState(false);\n  const [expandedTaskId, setExpandedTaskId] = useState(null); // Track which task is expanded\n\n  const getGroupedTasks = () => {\n    const grouped = {};\n\n    // Define categories based on selected grouping\n    let categories = [];\n    if (groupBy === 'Status') {\n      categories = ['To Do', 'In Progress', 'Done', 'Backlog'];\n    } else if (groupBy === 'User') {\n      categories = [...new Set(tasks.map(task => task.assignedUser))]; // Unique users\n    } else if (groupBy === 'Priority') {\n      categories = ['High Priority', 'Medium Priority', 'Low Priority', 'Urgent - Color', 'No Priority'];\n    }\n\n    // Initialize grouped object for each category\n    categories.forEach(category => {\n      grouped[category] = tasks.filter(task => {\n        if (groupBy === 'Status') return task.status === category;\n        if (groupBy === 'User') return task.assignedUser === category;\n        if (groupBy === 'Priority') {\n          return task.priority === 3 && category === 'High Priority' || task.priority === 2 && category === 'Medium Priority' || task.priority === 1 && category === 'Low Priority' || task.priority === 0 && category === 'No Priority' || task.priority === 5 && category === 'Urgent - Color';\n        }\n      });\n    });\n    return Object.entries(grouped).map(([key, value]) => ({\n      key,\n      tasks: value.sort((a, b) => {\n        if (ordering === 'Priority') {\n          return b.priority - a.priority;\n        } else {\n          return a.title.localeCompare(b.title);\n        }\n      })\n    }));\n  };\n  const groupedTasks = getGroupedTasks();\n\n  // Toggle expanded task\n  const toggleExpand = taskId => {\n    setExpandedTaskId(expandedTaskId === taskId ? null : taskId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-options\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDisplayOptions(!displayOptions),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: displayImage,\n            alt: \"Display\",\n            style: {\n              width: '20px',\n              marginRight: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), \"Display\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), displayOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"groupBy\",\n              children: \"Group By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"groupBy\",\n              value: groupBy,\n              onChange: e => setGroupBy(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Status\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"User\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Priority\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ordering\",\n              children: \"Ordering:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"ordering\",\n              value: ordering,\n              onChange: e => setOrdering(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Priority\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Title\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-columns\",\n        children: groupedTasks.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ticket-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: categoryImages[group.key] || '/images/default.png',\n              alt: group.key,\n              style: {\n                width: '20px',\n                marginRight: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), group.key || 'Unassigned']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ticket-list\",\n            children: group.tasks.length > 0 ? group.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ticket-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 23\n              }, this), task.title, \" (Priority: \", task.priority, \")\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"expand-icon\",\n                onClick: () => toggleExpand(task.id),\n                style: {\n                  cursor: 'pointer',\n                  marginLeft: '5px'\n                },\n                children: \"+ ...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 23\n              }, this), expandedTaskId === task.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"additional-info\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Additional information about \", task.title, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 25\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty\",\n              children: \"No tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, group.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"acKaoGlU0p9hg5oiEkjoRyyAXGo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","todoImage","inProgressImage","doneImage","backlogImage","highPriorityImage","mediumPriorityImage","lowPriorityImage","urgentColorImage","noPriorityImage","displayImage","jsxDEV","_jsxDEV","categoryImages","initialTasks","id","title","status","assignedUser","priority","App","_s","tasks","groupBy","setGroupBy","ordering","setOrdering","displayOptions","setDisplayOptions","expandedTaskId","setExpandedTaskId","getGroupedTasks","grouped","categories","Set","map","task","forEach","category","filter","Object","entries","key","value","sort","a","b","localeCompare","groupedTasks","toggleExpand","taskId","className","children","onClick","src","alt","style","width","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","e","target","group","length","type","cursor","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/bhuva/Desktop/kanban-board/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\n// Importing category images\r\nimport todoImage from './icons_FEtask/To-do.svg'; // Update the path as necessary\r\nimport inProgressImage from './icons_FEtask/in-progress.svg'; // Update the path as necessary\r\nimport doneImage from './icons_FEtask/Done.svg'; // Update the path as necessary\r\nimport backlogImage from './icons_FEtask/Backlog.svg'; // Update the path as necessary\r\nimport highPriorityImage from './icons_FEtask/Img-high.svg'; // Update with actual path\r\nimport mediumPriorityImage from './icons_FEtask/Img-medium.svg'; // Update with actual path\r\nimport lowPriorityImage from './icons_FEtask/Img-low.svg'; // Update with actual path\r\nimport urgentColorImage from './icons_FEtask/Urgent-Color.svg'; // Add your urgent color icon path\r\nimport noPriorityImage from './icons_FEtask/No-Priority.svg'; // Add your no priority icon path\r\nimport displayImage from './icons_FEtask/Display.svg'; // Add your display dropdown icon path\r\n\r\nconst categoryImages = {\r\n  'To Do': todoImage,\r\n  'In Progress': inProgressImage,\r\n  'Done': doneImage,\r\n  'Backlog': backlogImage,\r\n  'High Priority': highPriorityImage,\r\n  'Medium Priority': mediumPriorityImage,\r\n  'Low Priority': lowPriorityImage,\r\n  'Urgent - Color': urgentColorImage,\r\n  'No Priority': noPriorityImage,\r\n};\r\n\r\nconst initialTasks = [\r\n  { id: 1, title: 'Implement feature A', status: 'To Do', assignedUser: 'Alice', priority: 3 },\r\n  { id: 2, title: 'Fix bug B', status: 'In Progress', assignedUser: 'Bob', priority: 1 },\r\n  { id: 3, title: 'Review code C', status: 'Backlog', assignedUser: 'Charlie', priority: 2 },\r\n  { id: 4, title: 'Write documentation', status: 'To Do', assignedUser: 'Alice', priority: 4 },\r\n  { id: 5, title: 'Update UI', status: 'In Progress', assignedUser: 'David', priority: 0 },\r\n];\r\n\r\nconst App = () => {\r\n  const [tasks] = useState(initialTasks);\r\n  const [groupBy, setGroupBy] = useState('Status');\r\n  const [ordering, setOrdering] = useState('Priority');\r\n  const [displayOptions, setDisplayOptions] = useState(false);\r\n  const [expandedTaskId, setExpandedTaskId] = useState(null); // Track which task is expanded\r\n\r\n  const getGroupedTasks = () => {\r\n    const grouped = {};\r\n\r\n    // Define categories based on selected grouping\r\n    let categories = [];\r\n    if (groupBy === 'Status') {\r\n      categories = ['To Do', 'In Progress', 'Done', 'Backlog'];\r\n    } else if (groupBy === 'User') {\r\n      categories = [...new Set(tasks.map(task => task.assignedUser))]; // Unique users\r\n    } else if (groupBy === 'Priority') {\r\n      categories = [\r\n        'High Priority',\r\n        'Medium Priority',\r\n        'Low Priority',\r\n        'Urgent - Color',\r\n        'No Priority',\r\n      ];\r\n    }\r\n\r\n    // Initialize grouped object for each category\r\n    categories.forEach(category => {\r\n      grouped[category] = tasks.filter(task => {\r\n        if (groupBy === 'Status') return task.status === category;\r\n        if (groupBy === 'User') return task.assignedUser === category;\r\n        if (groupBy === 'Priority') {\r\n          return (task.priority === 3 && category === 'High Priority') ||\r\n                 (task.priority === 2 && category === 'Medium Priority') ||\r\n                 (task.priority === 1 && category === 'Low Priority') ||\r\n                 (task.priority === 0 && category === 'No Priority') ||\r\n                 (task.priority === 5 && category === 'Urgent - Color');\r\n        }\r\n      });\r\n    });\r\n\r\n    return Object.entries(grouped).map(([key, value]) => ({\r\n      key,\r\n      tasks: value.sort((a, b) => {\r\n        if (ordering === 'Priority') {\r\n          return b.priority - a.priority;\r\n        } else {\r\n          return a.title.localeCompare(b.title);\r\n        }\r\n      }),\r\n    }));\r\n  };\r\n\r\n  const groupedTasks = getGroupedTasks();\r\n\r\n  // Toggle expanded task\r\n  const toggleExpand = (taskId) => {\r\n    setExpandedTaskId(expandedTaskId === taskId ? null : taskId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      <div className=\"display-options\">\r\n        <div className=\"dropdown\">\r\n          <button onClick={() => setDisplayOptions(!displayOptions)}>\r\n            <img src={displayImage} alt=\"Display\" style={{ width: '20px', marginRight: '5px' }} />\r\n            Display\r\n          </button>\r\n          {displayOptions && (\r\n            <div className=\"dropdown-content\">\r\n              <div>\r\n                <label htmlFor=\"groupBy\">Group By:</label>\r\n                <select id=\"groupBy\" value={groupBy} onChange={e => setGroupBy(e.target.value)}>\r\n                  <option value=\"Status\">Status</option>\r\n                  <option value=\"User\">User</option>\r\n                  <option value=\"Priority\">Priority</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"ordering\">Ordering:</label>\r\n                <select id=\"ordering\" value={ordering} onChange={e => setOrdering(e.target.value)}>\r\n                  <option value=\"Priority\">Priority</option>\r\n                  <option value=\"Title\">Title</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"ticket-info\">\r\n        <div className=\"ticket-columns\">\r\n          {groupedTasks.map(group => (\r\n            <div key={group.key} className=\"ticket-column\">\r\n              <div className=\"category-name\">\r\n                <img src={categoryImages[group.key] || '/images/default.png'} alt={group.key} style={{ width: '20px', marginRight: '5px' }} />\r\n                {group.key || 'Unassigned'}\r\n              </div>\r\n              <div className=\"ticket-list\">\r\n                {group.tasks.length > 0 ? (\r\n                  group.tasks.map(task => (\r\n                    <div key={task.id} className=\"ticket-card\">\r\n                      <input type=\"checkbox\" className=\"checkbox\" />\r\n                      {task.title} (Priority: {task.priority})\r\n                      <span \r\n                        className=\"expand-icon\" \r\n                        onClick={() => toggleExpand(task.id)} \r\n                        style={{ cursor: 'pointer', marginLeft: '5px' }}\r\n                      >\r\n                        + ...\r\n                      </span>\r\n                      {expandedTaskId === task.id && (\r\n                        <div className=\"additional-info\">\r\n                          {/* Add additional information here */}\r\n                          <p>Additional information about {task.title}.</p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"empty\">No tasks</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}